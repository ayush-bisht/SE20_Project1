{"ast":null,"code":"import _classCallCheck from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/src/components/scream/Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs'; // MUI\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    commentImage: {\n      maxWidth: '100%',\n      height: 100,\n      objectFit: 'cover',\n      borderRadius: '50%'\n    },\n    commentData: {\n      marginLeft: 20\n    }\n  });\n};\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comments).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          classes = _this$props.classes;\n\n      if (comments == undefined) {\n        return React.createElement(Grid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \" No comments! \"));\n      }\n\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, comments.map(function (comment, index) {\n        var body = comment.body,\n            createdAt = comment.createdAt,\n            userImage = comment.userImage,\n            userHandle = comment.userHandle;\n        return React.createElement(Fragment, {\n          key: createdAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: userImage,\n          alt: \"comment\",\n          className: classes.commentImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          sm: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.commentData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h5\",\n          component: Link,\n          to: \"/users/\".concat(userHandle),\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, userHandle), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n          className: classes.invisibleSeparator,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(Typography, {\n          variabnt: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, body))))), index !== comments.length - 1 && React.createElement(\"hr\", {\n          className: classes.visibleSeparator,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["/Users/draghun/Desktop/react_apps/SE20_Project1/social_media_client/src/components/scream/Comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","Grid","Typography","styles","theme","commentImage","maxWidth","height","objectFit","borderRadius","commentData","marginLeft","Comments","console","log","props","comments","classes","undefined","map","comment","index","body","createdAt","userImage","userHandle","format","invisibleSeparator","length","visibleSeparator","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n// MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  ...theme,\n  commentImage: {\n    maxWidth: '100%',\n    height: 100,\n    objectFit: 'cover',\n    borderRadius: '50%'\n  },\n  commentData: {\n    marginLeft: 20\n  }\n});\n\nclass Comments extends Component {\n  render() {\n    console.log(this.props);\n    const { comments, classes } = this.props;\n    if (comments == undefined){\n      return (\n        <Grid>\n          <p> No comments! </p>\n        </Grid>\n      )\n    }\n    return (\n      <Grid container>\n        {comments.map((comment, index) => {\n          const { body, createdAt, userImage, userHandle } = comment;\n          return (\n            <Fragment key={createdAt}>\n              <Grid item sm={12}>\n                <Grid container>\n                  <Grid item sm={2}>\n                    <img\n                      src={userImage}\n                      alt=\"comment\"\n                      className={classes.commentImage}\n                    />\n                  </Grid>\n                  <Grid item sm={9}>\n                    <div className={classes.commentData}>\n                      <Typography\n                        variant=\"h5\"\n                        component={Link}\n                        to={`/users/${userHandle}`}\n                        color=\"primary\"\n                      >\n                        {userHandle}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                      </Typography>\n                      <hr className={classes.invisibleSeparator} />\n                      <Typography variabnt=\"body1\">{body}</Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {index !== comments.length - 1 && (\n                <hr className={classes.visibleSeparator} />\n              )}\n            </Fragment>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Comments);\n"]},"metadata":{},"sourceType":"module"}